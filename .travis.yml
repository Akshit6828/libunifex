# Build matrix / environment variables are explained on:
# http://about.travis-ci.org/docs/user/build-configuration/
# This file can be validated on: http://lint.travis-ci.org/

language: cpp
dist: bionic
osx_image: xcode11.3
sudo: true
git:
  submodules: false

compiler:
- gcc
- clang
os:
- linux
- osx

env:
- BUILD_TYPE=Debug
- BUILD_TYPE=RelWithDebInfo

addons:
  apt:
    sources:
    - sourceline: 'deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-9 main'
      key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
    - sourceline: 'ppa:ubuntu-toolchain-r/test'
    packages:
    - cmake
    - gcc-9
    - g++-9
    - ninja-build
  homebrew:
    packages:
    - cmake
    - gcc@9
    - llvm@8
    - ninja
    update: true

before_install:
- touch toolchain.cmake
- if [ "$TRAVIS_OS_NAME" = "linux" ]; then
    if [ "$TRAVIS_COMPILER" = "gcc" ]; then printf "set(CMAKE_C_COMPILER gcc-9)\nset(CMAKE_CXX_COMPILER g++-9)\n" > toolchain.cmake; fi;
    if [ "$TRAVIS_COMPILER" = "clang" ]; then
       wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key|sudo apt-key add -;
       sudo echo "deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-10 main" >> /etc/apt/sources.list;
       sudo apt update;
       sudo apt install clang-10 libc++-10-dev libc++abi-10-dev libomp-10-dev;
       printf "set(CMAKE_C_COMPILER clang-10)\nset(CMAKE_CXX_COMPILER clang++-10)\nset(CMAKE_CXX_FLAGS \"-stdlib=libc++ -std=c++20\")\nset(CMAKE_EXE_LINKER_FLAGS -stdlib=libc++)\n" > toolchain.cmake;
    fi;
  fi
- if [ "$TRAVIS_OS_NAME" = "osx" ]; then
    if [ "$CXX" = "g++" ]; then
      printf "set(CMAKE_C_COMPILER /usr/local/bin/gcc-9)\nset(CMAKE_CXX_COMPILER /usr/local/bin/g++-9)\n" > toolchain.cmake;
    fi;
    if [ "$CXX" = "clang++" ]; then
      printf "set(CMAKE_C_COMPILER /usr/local/opt/llvm@8/bin/clang)\nset(CMAKE_CXX_COMPILER /usr/local/opt/llvm@8/bin/clang++)\nset(CMAKE_CXX_FLAGS \"-I/usr/local/opt/llvm@8/include\ -std=c++2a\")\nset(CMAKE_EXE_LINKER_FLAGS -L/usr/local/opt/llvm@8/lib)\n" > toolchain.cmake;
    fi;
  fi
- cmake --version

before_script:
- mkdir -p build && cd build
- cmake .. -G Ninja -DCMAKE_TOOLCHAIN_FILE=toolchain.cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE || cat CMakeFiles/CMakeError.log
- ninja
- cd ..

script:
- cd build && ctest --verbose && cd ..
